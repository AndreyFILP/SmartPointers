Взяв за основу класс SmartPtr, выполнить следующие задания:

1) Добавить конструктор копирования и протестировать его работу:
SmartPtr(const SmartPtr& S)
2) Добавить перегрузку оператора присваивания и протестировать его работу:
SmartPtr& operator=(const SmartPtr& S)
3) Реализовать вариант класса со стратегией владения объектом на основе подсчета ссылок на объект. В рамках этой стратегии производится подсчет интеллектуальных указателей, ссылающихся на один и тот же объект. Когда их количество становится равным нулю, память указателя освобождается. Для подсчета ссылок можно, например, добавить в класс поле size_t* pCounter. Добавьте метод use_count(), возвращающий значение этого поля. Соответствующие изменения потребуются во всех конструкторах, в деструкторе и в операторе присваивания. Протестируйте работу измененного класса.
